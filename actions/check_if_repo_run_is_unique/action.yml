# This action checks if a repository has been updated.
# Repository should have a log of logged commits (in a CSV file)
# where commit SHA are compared to current develop. We output a boolean if
# indeed repository has been updated.
name: Check If Repository Has Been Updated
description: Check If Repository Has Been Updated

inputs:
  csv_filepath:
    description: "CSV file name"
    required: true
  branch:
    description: "Repository Branch To Check Out To"
    required: false

outputs:
  ref: 
    description: Get Current Repository Ref Of Runner
    value: ${{ steps.runner.outputs.ref }}
  is_unique: 
    description: Check If Run Is Unique
    value: ${{ steps.runner.outputs.is_unique }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      with:
        fetch-depth: 0
        ref: ${{ inputs.branch }}

    - id: cron_checker
      shell: bash
      run: |
        commit_sha='${{ github.event.inputs.commit_sha }}'
        
        if [[ -z $commit_sha ]]; then
          echo "is_cron=true" >> $GITHUB_OUTPUT
          echo "This is a Cron"
        else
          echo "is_cron=false" >> $GITHUB_OUTPUT
          echo "This is not a Cron"
        fi

    - id: cron_unique_checker
      shell: bash
      run: |
        git diff HEAD^1 --name-status

        set -ex
        if [[ "${{ steps.cron_checker.outputs.is_cron }}" == "false" ]]; then
          echo "This is a workflow dispatch"
          echo "is_unique=true" >> $GITHUB_OUTPUT
          echo "commit_sha=${{ github.event.inputs.commit_sha }}" >> $GITHUB_OUTPUT
          exit 0
        fi

        # We exit if there has been a change to  `cron_commit_log.csv` 
        # this means that there has been a recent deployment
        if git diff HEAD^1 --exit-code --name-status -- ${{ inputs.csv_filepath }}; then
          echo "This is a unique run"
          echo "is_unique=true" >> $GITHUB_OUTPUT
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        else
          echo "There has been a recent deployment"
          echo "is_unique=false" >> $GITHUB_OUTPUT
        fi

    - if: ${{ steps.cron_unique_checker.outputs.is_unique == 'false' }}
      uses: build-trust/.github/actions/cancel_workflow@custom-actions

    - id: runner
      shell: bash
      if: ${{ steps.cron_checker.outputs.is_cron == 'false' || steps.cron_unique_checker.outputs.is_unique == 'true' }}
      run: |
        echo "===> ${{ steps.cron_unique_checker.outputs.is_unique }}"
        ref=""
        if [[ "${{ steps.cron_checker.outputs.is_cron }}" == "true" ]]; then
          echo "cron_job,$(date +'%b %d %Y %T'),${{ steps.cron_unique_checker.outputs.commit_sha }}" >> ${{ inputs.csv_filepath }}
          ref="${{ steps.cron_unique_checker.outputs.commit_sha }}"
          echo "ref=${{ steps.cron_unique_checker.outputs.commit_sha }}" >> $GITHUB_OUTPUT
        else
          echo "${{ github.actor }},$(date +'%b %d %Y %T'),${{ github.event.inputs.commit_sha }}" >> ${{ inputs.csv_filepath }}
          ref="${{ steps.cron_unique_checker.outputs.commit_sha }}"
        fi

        git config --global user.email "bot@ockam.io"
        git config --global user.name "Ockam Bot"

        git add ${{ inputs.csv_filepath }}
        git commit -m "Add $ref to cron_log"
        git pull --rebase
        git push

        echo "ref=$ref" >> $GITHUB_OUTPUT
        echo "is_unique=${{ steps.cron_unique_checker.outputs.is_unique }}" >> $GITHUB_OUTPUT
